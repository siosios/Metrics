name: Generate Repo Count Image
on:
  # Schedule daily updates
  schedule: [{cron: "0 0 * * *"}]
  # (optional) Run workflow manually
  workflow_dispatch:
  # (optional) Run workflow when pushing on master/main
  push: {branches: ["master", "main"]}

jobs:
  create-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Fetch repo details from GitHub API
        id: fetch_repo_details
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPOS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/users/siosios/repos?per_page=100)
          echo "REPOS=$REPOS" >> $GITHUB_OUTPUT

      - name: Generate JPG image with repo details
        env:
          REPOS: ${{ steps.fetch_repo_details.outputs.REPOS }}
        run: |
          pip install pillow
          python - <<EOF
          from PIL import Image, ImageDraw, ImageFont
          import json

          width, height = 800, 600
          img = Image.new('RGB', (width, height), color=(73, 109, 137))
          d = ImageDraw.Draw(img)

          # Try to load a truetype font, fallback if not available
          try:
              font = ImageFont.truetype("Arial.ttf", 20)
          except:
              font = ImageFont.load_default()

          repos = json.loads('''$REPOS''')

          y = 10
          for repo in repos:
              text = f"Name: {repo['name']}, Stars: {repo['stargazers_count']}, Forks: {repo['forks_count']}"
              d.text((10, y), text, font=font, fill=(255, 255, 255))
              y += 25

          img.save('repo_details.jpg')
          EOF

      - name: Upload JPG as artifact
        uses: actions/upload-artifact@v3
        with:
          name: repo-details-image
          path: repo_details.jpg
